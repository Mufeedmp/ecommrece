<%- include("../../views/partials/admin/header") %>
<head>
   <style>
       .thumbnails-container {
           display: flex;
           overflow-x: auto;
       }

       .thumbnail {
           margin-right: 10px;
       }
       .input-upload {
   position: relative;
}

.error-message {
           color: red;
           display: none;
       }

   </style>
   <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
</head>
   <section class="content-main">
       <div class="row">
           <div class="col-9">
               <div class="content-header">
                   <h2 class="content-title">Edit Product</h2>

               </div>
           </div>
           <div class="col-lg-6">
               <div class="card mb-4">

                   <div class="card-body">
                       <form method="POST" action="/admin/editProduct/<%=product._id%>" enctype="multipart/form-data"
                           onsubmit="return validateForm()">
                           <div class="mb-4">
                               <label for="product_name" class="form-label">Product Name</label>
                               <input type="text" name="productName" value="<%=product.productName%>"
                                   class="form-control border" id="product_name">
                                   <div id="productName-error" class="error-message"></div>
                           </div>
                           
                           <div class="mb-4">
                               <label class="form-label">Full description</label>
                               <input name="descriptionData" value="<%=product.description%>"  class="form-control border"
                                   rows="4">
                                   <div id="description-error" class="error-message"></div>
                           </div>
                           <div class="row">
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Regular price</label>
                                       <input placeholder="$" name="regularPrice" type="text"
                                           value="<%=product.regularPrice%>" class="form-control border">
                                           <div id="regularPrice-error" class="error-message"></div>
                                   </div>
                               </div>
                               <div class="col-lg-4">
                                   <div class="mb-4">
                                       <label class="form-label">Sale price</label>
                                       <input name="salePrice" type="text" value="<%=product.salePrice%>"
                                           class="form-control border">
                                   </div>
                                   <div id="salePrice-error" class="error-message"></div>
                               </div>
                               <div class="col-lg-4">
                                <div class="mb-4">
                                    <label class="form-label">Color</label>
                                    <input name="color" type="text" value="<%=product.color%>"
                                        class="form-control border">
                                        <div id="color-error" class="error-message"></div>
                                </div>
                            </div>
                         
                           </div>
                          
                             
                               
                              
                           
                           <div class="row">
                            <div class="col-lg-4">
                              <div class="mb-4">
                                <label class="form-label">Category</label>
                                <select class="form-select border" id="category" name="category" style="width: 150px;" >
                                  <% for (let i = 0; i < cat.length; i++) { %>
                                    <option value="<%= cat[i].name %>">
                                      <%= cat[i].name %>
                                    </option>
                                  <% } %>
                                </select>
                                <div id="category-error" class="error-message"></div>
                              </div>
                            </div>
                          </div>

                <div class="row">
                             <div class="col-lg-4">
                            <div class="mb-4">
                                <label class="form-label">Size-M</label>
                                <input  name="M" id="sizeM" type="number" class="form-control" min="0" value="<%= product.size.find(s => s.sizeName === 'M')?.quantity || 0 %>">
                                <div id="M-error" class="error-message"></div>
                            </div>
                         
                        </div>
                        <div class="col-lg-4">
                            <div class="mb-4">
                                <label class="form-label">Size-L</label>
                                <input  name="L" id="sizeL" type="number" class="form-control" min="0" value="<%= product.size.find(s => s.sizeName === 'L')?.quantity || 0 %>">
                                <div id="L-error" class="error-message"></div>
                            </div>
                           
                        </div>
                        <div class="col-lg-4">
                            <div class="mb-4">
                                <label class="form-label">Size-XL</label>
                                <input  name="XL" id="sizeXL" type="number" class="form-control" min="0" value="<%= product.size.find(s => s.sizeName === 'XL')?.quantity || 0 %>">
                                <div id="XL-error" class="error-message"></div>
                            </div>
                           
                        </div>
                    </div>   
                           <div class="card mb-2">
                               <div class="card-header">
                                   <h4>Choose images</h4>
                               </div>
                                  
                               <% for (let i = 0; i < product.productImage.length; i++) { %>
                                <div class="col-md-12">
                                    <div class="mb-4" style="position: relative; display: inline-block;">
                                        <div class="col-12">
                                         
                                            <input type="hidden" name="existingImages[]" value="<%= product.productImage[i] %>" id="imageDatas">
                                
                                      
                                            <img 
                                                class="rounded uploaded-image" 
                                                data-image-id="<%= product.productImage[i] %>" 
                                                style="width: 50px; height: 60px; display: block;" 
                                                src="/uploads/product-images/<%= product.productImage[i] %>" 
                                                alt="Image">
                                
                                        
                                            <i 
                                                onclick="deleteSingleImage('<%= product.productImage[i] %>', '<%= product._id %>')" 
                                                style="position: absolute; top: 0; right: 0; background: #ff0000; color: #fff; 
                                                       border-radius: 50%; width: 20px; height: 20px; display: flex; 
                                                       justify-content: center; align-items: center; cursor: pointer; font-size: 14px;" 
                                                class="fa fa-times">
                                            </i>
                                        </div>
                                    </div>
                                </div>
                                <% } %>
                                
                            
                                  
                               <div class="card-body">
                                   <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                       <img src="" alt="" id="imgView1">
                                       <input class="form-control" type="file" name="images" id="input1"
                                           accept="image/png, image/jpeg, image/jpg"
                                           onchange="viewImage1(event), viewImage(event, 1)">
                                           <div id="images-error" class="error-message"></div>
                                   </div>
                                   <div class="image-cropper d-flex align-items-center"
                                   style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                   <img src="" id="croppedImg1" alt="">
                                   <button type="button" id="saveButton1" class="btn-sm btn-primary">Save</button>
                                </div>
                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView2">
                                        <input class="form-control" type="file" name="images" id="input2"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="viewImage2(event),viewImage(event, 2)">
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg2" alt="">
                                        <button type="button" id="saveButton2" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>
                                
                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView3">
                                        <input class="form-control" type="file" name="images" id="input3"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="viewImage3(event),viewImage(event, 3)">
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg3" alt="">
                                        <button type="button" id="saveButton3" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>
                                
                                <div class="row">
                                    <div class="card-body align-items-center" style="margin-bottom: 20px;">
                                        <img src="" alt="" id="imgView4">
                                        <input class="form-control" type="file" name="images" id="input4"
                                            accept="image/png, image/jpeg, image/jpg"
                                            onchange="viewImage4(event),viewImage(event, 4)">
                                    </div>
                                    <div class="image-cropper d-flex align-items-center"
                                        style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                        <img src="" id="croppedImg4" alt="">
                                        <button type="button" id="saveButton4" class="btn-sm btn-primary">Save</button>
                                    </div>
                                </div>
                               </div>
                           </div>
                           <div>

                               <button class="btn btn-md rounded font-sm hover-up" id="updatebtn"
                                   type="submit"  onclick="validateAndSubmit()">Update</button>
                           </div>
                       </form>
                   </div>
               </div>
           </div>
       </div>
       </div>
   </section>
   <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>
<%- include("../../views/partials/admin/footer") %>

<script>
    
    function validateAndSubmit() {
    if (validateForm()) {
        document.forms[0].submit();
    }
}

function validateForm() {
    clearErrorMessages();

    const name = document.getElementsByName('productName')[0].value;
    const description = document.getElementsByName('descriptionData')[0].value;
    const price = document.getElementsByName('regularPrice')[0].value;
    const salePrice = document.getElementsByName('salePrice')[0].value;
    const color = document.getElementsByName('color')[0].value;
    const category = document.getElementById('category').value;
    const sizeM = document.getElementById('sizeM').value;
    const sizeL = document.getElementById('sizeL').value;
    const sizeXL = document.getElementById('sizeXL').value;
    
    const hasExistingImages = document.querySelectorAll('input[name="existingImages[]"]').length > 0;
    const hasNewImages = Array.from(document.querySelectorAll('input[type="file"]')).some(input => input.files.length > 0);
    
    let isValid = true;
    if (name.trim() === "") {
        displayErrorMessage('productName-error', 'Please enter a product name.');
        isValid = false;
    }
    if (description.trim() === "") {
        displayErrorMessage('description-error', 'Please enter a product description.');
        isValid = false;
    }
    if (!validatePrice(price)) {
        displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
        isValid = false;
    }

    if (salePrice && !validatePrice(salePrice)) {
        displayErrorMessage('salePrice-error', 'Please enter a valid non-negative sale price.');
        isValid = false;
    }

    if (validatePrice(price) && validatePrice(salePrice) && parseFloat(salePrice) >= parseFloat(price)) {
        displayErrorMessage('salePrice-error', 'Sale price must be less than regular price.');
        isValid = false;
    }

    if (color.trim() === "") {
        displayErrorMessage('color-error', 'Please enter a color.');
        isValid = false;
    }

    if (!category) {
        displayErrorMessage('category-error', 'Please select a category.');
        isValid = false;
    }

    if (!validateSize(sizeM)) {
        displayErrorMessage('M-error', 'Please enter a valid quantity for size M.');
        isValid = false;
    }
    if (!validateSize(sizeL)) {
        displayErrorMessage('L-error', 'Please enter a valid quantity for size L.');
        isValid = false;
    }
    if (!validateSize(sizeXL)) {
        displayErrorMessage('XL-error', 'Please enter a valid quantity for size XL.');
        isValid = false;
    }

    if (!hasExistingImages && !hasNewImages) {
        displayErrorMessage('images-error', 'Please select at least one image.');
        isValid = false;
    }

    return isValid;
}

function validatePrice(price) {
    return /^\d+(\.\d{1,2})?$/.test(price) && parseFloat(price) >= 0;
}
function validateSize(size) {
    return /^\d+$/.test(size) && parseInt(size) >= 0;
}

function displayErrorMessage(elementId, message) {
    const errorElement = document.getElementById(elementId);
    if (errorElement) {
        errorElement.innerText = message;
        errorElement.style.display = "block";
        errorElement.scrollIntoView({ behavior: 'smooth', block: 'center' });
    }
}

function clearErrorMessages() {
    const errorElements = document.getElementsByClassName('error-message');
    Array.from(errorElements).forEach(element => {
        element.style.display = "none";
        element.innerText = '';
    });
}
    
    
    function viewImage1(event) {
               document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
           }
    
           function viewImage2(event) {
               document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
           }
    
           function viewImage3(event) {
               document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
           }
    
           function viewImage4(event) {
               document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0])
           }
    
    
           function viewImage(event, index) {
               let input = event.target;
               let reader = new FileReader();
               reader.onload = function () {
                   let dataURL = reader.result;
                   let image = document.getElementById('imgView' + index);
                   image.src = dataURL;
                   let cropper = new Cropper(image, {
                       aspectRatio: 1,
                       viewMode: 1,
                       guides: true,
                       background: false,
                       autoCropArea: 1,
                       zoomable: true
                   });
                   let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
                   cropperContainer.style.display = 'block';
                   let saveButton = document.querySelector('#saveButton' + index);
                   saveButton.addEventListener('click', async function () {
                       let croppedCanvas = cropper.getCroppedCanvas();
                       let croppedImage = document.getElementById("croppedImg" + index);
                       croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);
                       let timestamp = new Date().getTime();
                       let fileName = `cropped-img-${timestamp}-${index}.png`;
                       await croppedCanvas.toBlob(blob => {
                           let input = document.getElementById('input' + index);
                           let imgFile = new File([blob], fileName, blob)
                           const fileList = new DataTransfer();
                           fileList.items.add(imgFile);
                           input.files = fileList.files
                       });
                       cropperContainer.style.display = 'none';
                   });
               };
               reader.readAsDataURL(input.files[0]);
           }
    
           const selectedImages = [];
       document.getElementById("imageInput").addEventListener("change", handleFileSelect);
    
           function handleFileSelect(event) {
               const addedImagesContainer = document.getElementById("addedImagesContainer");
               addedImagesContainer.innerHTML = "";
               const files = event.target.files;
               for (let i = 0; i < files.length; i++) {
                   const file = files[i];
                   selectedImages.push(file);
                   const thumbnail = document.createElement("div");
                   thumbnail.classList.add("thumbnail");
                   const img = document.createElement("img");
                   img.src = URL.createObjectURL(file);
                   img.alt = "thumbnail";
                   img.style.width = "50px";
                   img.style.height = "auto";
                   const removeIcon = document.createElement("span");
                   removeIcon.classList.add("remove-icon");
                   removeIcon.innerHTML = "&times;";
                   removeIcon.addEventListener("click", function () {
                       const index = selectedImages.indexOf(file);
                       if (index !== -1) {
                           selectedImages.splice(index, 1);
                       }
                       thumbnail.remove();
                   });
                   thumbnail.appendChild(img);
                   thumbnail.appendChild(removeIcon);
                   addedImagesContainer.appendChild(thumbnail);
               }
           };

           function deleteSingleImage(imageName, productId) {
    if (confirm("Are you sure you want to delete this image?")) {
        fetch(`/admin/deleteImage/${productId}/${imageName}`, {
            method: "DELETE",
        })
        .then((response) => {
            if (response.ok) {
                alert("Image deleted successfully.");
                location.reload(); 
            } else {
                alert("Failed to delete the image. Please try again.");
            }
        })
        .catch((error) => console.error("Error deleting image:", error));
    }
}

       </script>
    
    